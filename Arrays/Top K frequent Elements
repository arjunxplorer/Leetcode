Given an integer array nums and an integer k, return the k most frequent elements. You may return the answer in any order.

class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        HashMap<Integer, Integer> map = new HashMap<>();
        int[] res = new int[k];

        for(int num: nums){
            map.put(num, map.getOrDefault(num,0)+1);
        }

        PriorityQueue<Map.Entry<Integer, Integer>> heap = new PriorityQueue<>((a,b) -> a.getValue() - b.getValue());

        for(Map.Entry<Integer, Integer> entry: map.entrySet()){
            heap.add(entry);

            if(heap.size() > k){
                heap.poll();
            }
        }
        for(int i=k-1; i>= 0; i--){
            res[i]=heap.poll().getKey();
        }

        return res;
    }
}
